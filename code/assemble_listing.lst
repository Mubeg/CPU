
Time and date: Wed Oct 30 12:29:41 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000s
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:41:07 2019
Assemble listing for assembled.mubeg

[0008]: 46 00 00 00 ff ff ff ff <-- call main
[0010]: 00 00 00 00             <-- end
[0014]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[001C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0024]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[002C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0034]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[003C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0044]: 29 00 00 00 ff ff ff ff <-- 	ja addr_is_neg
[004C]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0054]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[005C]: 2d 00 00 00 ff ff ff ff <-- 	je a_is_zero
[0064]: 28 00 00 00 ff ff ff ff <-- 	jmp end_a_zero
[006C]: 0a 00 00 00 06 00 00 00 <-- 		push 6
[0074]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[007C]: 28 00 00 00 ff ff ff ff <-- 		jmp return_equal
[0084]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[008C]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0094]: 2e 00 00 00 ff ff ff ff <-- 		jne b_is_not_zero
[009C]: 0a 00 00 00 07 00 00 00 <-- 		push 7 
[00A4]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[00AC]: 28 00 00 00 ff ff ff ff <-- 		jmp end_a_zero
[00B4]: 0a 00 00 00 00 00 00 00 <-- 			push 0
[00BC]: 15 00 00 00 00 00 00 00 <-- 			pop ax
[00C4]: 28 00 00 00 ff ff ff ff <-- 			jmp return_equal
[00CC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00D4]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[00DC]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[00E4]: 3c 00 00 00             <-- 	mul 
[00E8]: 17 00 00 00 02 00 00 00 <-- 	pop [cx
[00F0]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00F8]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0100]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0108]: 64 00 00 00             <-- 	return
[010C]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0114]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[011C]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0124]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[012C]: 0a 00 00 00 00 00 00 00 <-- 	push 0 
[0134]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[013C]: 2e 00 00 00 ff ff ff ff <-- 	jne solveLinear_end
[0144]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[014C]: 14 00 00 00             <-- 		pop
[0150]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0158]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[0160]: 0b 00 00 00 02 00 00 00 <-- 		push cx
[0168]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[0170]: 46 00 00 00 ff ff ff ff <-- 		call solveLinear
[0178]: 64 00 00 00             <-- 		return 
[017C]: 0a 00 00 00 04 00 00 00 <-- 	push 4
[0184]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[018C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0194]: 3d 00 00 00             <-- 	fmul
[0198]: 3c 00 00 00             <-- 	mul
[019C]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01A4]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01AC]: 3d 00 00 00             <-- 	fmul
[01B0]: 50 00 00 00             <-- 	sub
[01B4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[01BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[01C4]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[01CC]: 2e 00 00 00 ff ff ff ff <-- 	jne d_is_zero_end
[01D4]: 15 00 00 00 02 00 00 00 <-- 		pop cx
[01DC]: 0a 00 00 00 02 00 00 00 <-- 		push 2
[01E4]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[01EC]: 3c 00 00 00             <-- 		mul
[01F0]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[01F8]: 0a 00 00 00 ff ff ff ff <-- 		push -1
[0200]: 3c 00 00 00             <-- 		mul
[0204]: 6f 00 00 00             <-- 		fdiv  
[0208]: 0d 00 00 00 02 00 00 00 <-- 		push [cx
[0210]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[0218]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0220]: 14 00 00 00             <-- 		pop
[0224]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[022C]: 64 00 00 00             <-- 		return
[0230]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0238]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0240]: 2b 00 00 00 02 00 00 00 <-- 	jb d_is_less_zero_end
[0248]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0250]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0258]: 14 00 00 00             <-- 		pop
[025C]: 14 00 00 00             <-- 		pop
[0260]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0268]: 64 00 00 00             <-- 		return
[026C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[0274]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[027C]: 3c 00 00 00             <-- 	mul
[0280]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0288]: 78 00 00 00             <-- 	sqrt
[028C]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[0294]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[029C]: 3c 00 00 00             <-- 	mul
[02A0]: 1e 00 00 00             <-- 	add
[02A4]: 6f 00 00 00             <-- 	fdiv 
[02A8]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[02B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[02B8]: 3c 00 00 00             <-- 	mul
[02BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[02C4]: 78 00 00 00             <-- 	sqrt
[02C8]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[02D0]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[02D8]: 3c 00 00 00             <-- 	mul
[02DC]: 50 00 00 00             <-- 	sub
[02E0]: 6f 00 00 00             <-- 	fdiv 
[02E4]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[02EC]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[02F4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[02FC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0304]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[030C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0314]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[031C]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[0324]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[032C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0334]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[033C]: 64 00 00 00             <-- 	return
[0340]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0348]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0350]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0358]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0360]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0368]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0370]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0378]: 0a 00 00 00 45 00 00 00 <-- 	push 69
[0380]: 33 00 00 00             <-- 	cout
[0384]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[038C]: 33 00 00 00             <-- 	cout
[0390]: 0a 00 00 00 74 00 00 00 <-- 	push 116
[0398]: 33 00 00 00             <-- 	cout
[039C]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[03A4]: 33 00 00 00             <-- 	cout
[03A8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[03B0]: 33 00 00 00             <-- 	cout
[03B4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03BC]: 33 00 00 00             <-- 	cout
[03C0]: 0a 00 00 00 61 00 00 00 <-- 	push 97
[03C8]: 33 00 00 00             <-- 	cout
[03CC]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03D4]: 33 00 00 00             <-- 	cout
[03D8]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03E0]: 33 00 00 00             <-- 	cout
[03E4]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[03EC]: 33 00 00 00             <-- 	cout
[03F0]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03F8]: 33 00 00 00             <-- 	cout
[03FC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0404]: 33 00 00 00             <-- 	cout
[0408]: 0a 00 00 00 63 00 00 00 <-- 	push 99
[0410]: 33 00 00 00             <-- 	cout
[0414]: 0a 00 00 00 3a 00 00 00 <-- 	push 58
[041C]: 33 00 00 00             <-- 	cout	
[0420]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0428]: 33 00 00 00             <-- 	cout
[042C]: 5b 00 00 00             <-- 	fin 
[0430]: 5b 00 00 00             <-- 	fin 
[0434]: 5b 00 00 00             <-- 	fin 
[0438]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0440]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0448]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0450]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0458]: 0c 00 00 00 00 00 00 00 <-- 	push [0]
[0460]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0468]: 0c 00 00 00 01 00 00 00 <-- 	push [1]
[0470]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0478]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0480]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0488]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0490]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[0498]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04A0]: 46 00 00 00 ff ff ff ff <-- 	call solveSquare
[04A8]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[04B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04B8]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[04C0]: 2e 00 00 00 ff ff ff ff <-- 	jne case_1
[04C8]: 0a 00 00 00 4e 00 00 00 <-- 	push 78
[04D0]: 33 00 00 00             <-- 	cout
[04D4]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[04DC]: 33 00 00 00             <-- 	cout
[04E0]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[04E8]: 33 00 00 00             <-- 	cout
[04EC]: 0a 00 00 00 52 00 00 00 <-- 	push 82
[04F4]: 33 00 00 00             <-- 	cout
[04F8]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[0500]: 33 00 00 00             <-- 	cout
[0504]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[050C]: 33 00 00 00             <-- 	cout
[0510]: 0a 00 00 00 54 00 00 00 <-- 	push 84
[0518]: 33 00 00 00             <-- 	cout
[051C]: 0a 00 00 00 53 00 00 00 <-- 	push 83
[0524]: 33 00 00 00             <-- 	cout
[0528]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0530]: 33 00 00 00             <-- 	cout
[0534]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[053C]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0544]: 2e 00 00 00 ff ff ff ff <-- 	jne case_2
[054C]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0554]: 33 00 00 00             <-- 	cout
[0558]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0560]: 33 00 00 00             <-- 	cout
[0564]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[056C]: 33 00 00 00             <-- 	cout
[0570]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0578]: 33 00 00 00             <-- 	cout
[057C]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[0584]: 34 00 00 00             <-- 	fout
[0588]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0590]: 33 00 00 00             <-- 	cout
[0594]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[059C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[05A4]: 2e 00 00 00 ff ff ff ff <-- 	jne case_3
[05AC]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[05B4]: 33 00 00 00             <-- 	cout
[05B8]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[05C0]: 33 00 00 00             <-- 	cout
[05C4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05CC]: 33 00 00 00             <-- 	cout
[05D0]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[05D8]: 33 00 00 00             <-- 	cout
[05DC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05E4]: 33 00 00 00             <-- 	cout
[05E8]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[05F0]: 34 00 00 00             <-- 	fout
[05F4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[05FC]: 33 00 00 00             <-- 	cout
[0600]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0608]: 33 00 00 00             <-- 	cout
[060C]: 0a 00 00 00 32 00 00 00 <-- 	push 50
[0614]: 33 00 00 00             <-- 	cout
[0618]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0620]: 33 00 00 00             <-- 	cout
[0624]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[062C]: 33 00 00 00             <-- 	cout
[0630]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0638]: 33 00 00 00             <-- 	cout
[063C]: 16 00 00 00 01 00 00 00 <-- 	pop [1]
[0644]: 34 00 00 00             <-- 	fout
[0648]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0650]: 33 00 00 00             <-- 	cout
[0654]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[065C]: 0a 00 00 00 07 00 00 00 <-- 	push 7
[0664]: 2e 00 00 00 ff ff ff ff <-- 	jne default_case
[066C]: 0a 00 00 00 41 00 00 00 <-- 	push 65
[0674]: 33 00 00 00             <-- 	cout
[0678]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[0680]: 33 00 00 00             <-- 	cout
[0684]: 0a 00 00 00 79 00 00 00 <-- 	push 121
[068C]: 33 00 00 00             <-- 	cout
[0690]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0698]: 33 00 00 00             <-- 	cout
[069C]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[06A4]: 33 00 00 00             <-- 	cout
[06A8]: 0a 00 00 00 75 00 00 00 <-- 	push 117
[06B0]: 33 00 00 00             <-- 	cout
[06B4]: 0a 00 00 00 6d 00 00 00 <-- 	push 109
[06BC]: 33 00 00 00             <-- 	cout
[06C0]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[06C8]: 33 00 00 00             <-- 	cout
[06CC]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[06D4]: 33 00 00 00             <-- 	cout
[06D8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[06E0]: 33 00 00 00             <-- 	cout
[06E4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[06EC]: 33 00 00 00             <-- 	cout
[06F0]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[06F8]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0700]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0708]: 64 00 00 00             <-- 		return		
[070C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0714]: 14 00 00 00             <-- 	pop
[0718]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0720]: 64 00 00 00             <-- 	return

Time and date: Wed Oct 30 14:43:26 2019
Assemble listing for assembled.mubeg

[0008]: 46 00 00 00 ff ff ff ff <-- call main
[0010]: 00 00 00 00             <-- end
[0014]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[001C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0024]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[002C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0034]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[003C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0044]: 29 00 00 00 ff ff ff ff <-- 	ja addr_is_neg
[004C]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0054]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[005C]: 2d 00 00 00 ff ff ff ff <-- 	je a_is_zero
[0064]: 28 00 00 00 ff ff ff ff <-- 	jmp end_a_zero
[006C]: 0a 00 00 00 06 00 00 00 <-- 		push 6
[0074]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[007C]: 28 00 00 00 ff ff ff ff <-- 		jmp return_equal
[0084]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[008C]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0094]: 2e 00 00 00 ff ff ff ff <-- 		jne b_is_not_zero
[009C]: 0a 00 00 00 07 00 00 00 <-- 		push 7 
[00A4]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[00AC]: 28 00 00 00 ff ff ff ff <-- 		jmp end_a_zero
[00B4]: 0a 00 00 00 00 00 00 00 <-- 			push 0
[00BC]: 15 00 00 00 00 00 00 00 <-- 			pop ax
[00C4]: 28 00 00 00 ff ff ff ff <-- 			jmp return_equal
[00CC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00D4]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[00DC]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[00E4]: 3c 00 00 00             <-- 	mul 
[00E8]: 17 00 00 00 02 00 00 00 <-- 	pop [cx
[00F0]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00F8]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0100]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0108]: 64 00 00 00             <-- 	return
[010C]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0114]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[011C]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0124]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[012C]: 0a 00 00 00 00 00 00 00 <-- 	push 0 
[0134]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[013C]: 2e 00 00 00 ff ff ff ff <-- 	jne solveLinear_end
[0144]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[014C]: 14 00 00 00             <-- 		pop
[0150]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0158]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[0160]: 0b 00 00 00 02 00 00 00 <-- 		push cx
[0168]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[0170]: 46 00 00 00 ff ff ff ff <-- 		call solveLinear
[0178]: 64 00 00 00             <-- 		return 
[017C]: 0a 00 00 00 04 00 00 00 <-- 	push 4
[0184]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[018C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0194]: 3d 00 00 00             <-- 	fmul
[0198]: 3c 00 00 00             <-- 	mul
[019C]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01A4]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01AC]: 3d 00 00 00             <-- 	fmul
[01B0]: 50 00 00 00             <-- 	sub
[01B4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[01BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[01C4]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[01CC]: 2e 00 00 00 ff ff ff ff <-- 	jne d_is_zero_end
[01D4]: 15 00 00 00 02 00 00 00 <-- 		pop cx
[01DC]: 0a 00 00 00 02 00 00 00 <-- 		push 2
[01E4]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[01EC]: 3c 00 00 00             <-- 		mul
[01F0]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[01F8]: 0a 00 00 00 ff ff ff ff <-- 		push -1
[0200]: 3c 00 00 00             <-- 		mul
[0204]: 6f 00 00 00             <-- 		fdiv  
[0208]: 0d 00 00 00 02 00 00 00 <-- 		push [cx
[0210]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[0218]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0220]: 14 00 00 00             <-- 		pop
[0224]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[022C]: 64 00 00 00             <-- 		return
[0230]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0238]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0240]: 2b 00 00 00 02 00 00 00 <-- 	jb d_is_less_zero_end
[0248]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0250]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0258]: 14 00 00 00             <-- 		pop
[025C]: 14 00 00 00             <-- 		pop
[0260]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0268]: 64 00 00 00             <-- 		return
[026C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[0274]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[027C]: 3c 00 00 00             <-- 	mul
[0280]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0288]: 78 00 00 00             <-- 	sqrt
[028C]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[0294]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[029C]: 3c 00 00 00             <-- 	mul
[02A0]: 1e 00 00 00             <-- 	add
[02A4]: 6f 00 00 00             <-- 	fdiv 
[02A8]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[02B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[02B8]: 3c 00 00 00             <-- 	mul
[02BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[02C4]: 78 00 00 00             <-- 	sqrt
[02C8]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[02D0]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[02D8]: 3c 00 00 00             <-- 	mul
[02DC]: 50 00 00 00             <-- 	sub
[02E0]: 6f 00 00 00             <-- 	fdiv 
[02E4]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[02EC]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[02F4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[02FC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0304]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[030C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0314]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[031C]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[0324]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[032C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0334]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[033C]: 64 00 00 00             <-- 	return
[0340]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0348]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0350]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0358]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0360]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0368]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0370]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0378]: 0a 00 00 00 45 00 00 00 <-- 	push 69
[0380]: 33 00 00 00             <-- 	cout
[0384]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[038C]: 33 00 00 00             <-- 	cout
[0390]: 0a 00 00 00 74 00 00 00 <-- 	push 116
[0398]: 33 00 00 00             <-- 	cout
[039C]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[03A4]: 33 00 00 00             <-- 	cout
[03A8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[03B0]: 33 00 00 00             <-- 	cout
[03B4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03BC]: 33 00 00 00             <-- 	cout
[03C0]: 0a 00 00 00 61 00 00 00 <-- 	push 97
[03C8]: 33 00 00 00             <-- 	cout
[03CC]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03D4]: 33 00 00 00             <-- 	cout
[03D8]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03E0]: 33 00 00 00             <-- 	cout
[03E4]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[03EC]: 33 00 00 00             <-- 	cout
[03F0]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03F8]: 33 00 00 00             <-- 	cout
[03FC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0404]: 33 00 00 00             <-- 	cout
[0408]: 0a 00 00 00 63 00 00 00 <-- 	push 99
[0410]: 33 00 00 00             <-- 	cout
[0414]: 0a 00 00 00 3a 00 00 00 <-- 	push 58
[041C]: 33 00 00 00             <-- 	cout	
[0420]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0428]: 33 00 00 00             <-- 	cout
[042C]: 5b 00 00 00             <-- 	fin 
[0430]: 5b 00 00 00             <-- 	fin 
[0434]: 5b 00 00 00             <-- 	fin 
[0438]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0440]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0448]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0450]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0458]: 0c 00 00 00 00 00 00 00 <-- 	push [0]
[0460]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0468]: 0c 00 00 00 01 00 00 00 <-- 	push [1]
[0470]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0478]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0480]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0488]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0490]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[0498]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04A0]: 46 00 00 00 ff ff ff ff <-- 	call solveSquare
[04A8]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[04B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04B8]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[04C0]: 2e 00 00 00 ff ff ff ff <-- 	jne case_1
[04C8]: 0a 00 00 00 4e 00 00 00 <-- 	push 78
[04D0]: 33 00 00 00             <-- 	cout
[04D4]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[04DC]: 33 00 00 00             <-- 	cout
[04E0]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[04E8]: 33 00 00 00             <-- 	cout
[04EC]: 0a 00 00 00 52 00 00 00 <-- 	push 82
[04F4]: 33 00 00 00             <-- 	cout
[04F8]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[0500]: 33 00 00 00             <-- 	cout
[0504]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[050C]: 33 00 00 00             <-- 	cout
[0510]: 0a 00 00 00 54 00 00 00 <-- 	push 84
[0518]: 33 00 00 00             <-- 	cout
[051C]: 0a 00 00 00 53 00 00 00 <-- 	push 83
[0524]: 33 00 00 00             <-- 	cout
[0528]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0530]: 33 00 00 00             <-- 	cout
[0534]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[053C]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0544]: 2e 00 00 00 ff ff ff ff <-- 	jne case_2
[054C]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0554]: 33 00 00 00             <-- 	cout
[0558]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0560]: 33 00 00 00             <-- 	cout
[0564]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[056C]: 33 00 00 00             <-- 	cout
[0570]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0578]: 33 00 00 00             <-- 	cout
[057C]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[0584]: 34 00 00 00             <-- 	fout
[0588]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0590]: 33 00 00 00             <-- 	cout
[0594]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[059C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[05A4]: 2e 00 00 00 ff ff ff ff <-- 	jne case_3
[05AC]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[05B4]: 33 00 00 00             <-- 	cout
[05B8]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[05C0]: 33 00 00 00             <-- 	cout
[05C4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05CC]: 33 00 00 00             <-- 	cout
[05D0]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[05D8]: 33 00 00 00             <-- 	cout
[05DC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05E4]: 33 00 00 00             <-- 	cout
[05E8]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[05F0]: 34 00 00 00             <-- 	fout
[05F4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[05FC]: 33 00 00 00             <-- 	cout
[0600]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0608]: 33 00 00 00             <-- 	cout
[060C]: 0a 00 00 00 32 00 00 00 <-- 	push 50
[0614]: 33 00 00 00             <-- 	cout
[0618]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0620]: 33 00 00 00             <-- 	cout
[0624]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[062C]: 33 00 00 00             <-- 	cout
[0630]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0638]: 33 00 00 00             <-- 	cout
[063C]: 16 00 00 00 01 00 00 00 <-- 	pop [1]
[0644]: 34 00 00 00             <-- 	fout
[0648]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0650]: 33 00 00 00             <-- 	cout
[0654]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[065C]: 0a 00 00 00 07 00 00 00 <-- 	push 7
[0664]: 2e 00 00 00 ff ff ff ff <-- 	jne default_case
[066C]: 0a 00 00 00 41 00 00 00 <-- 	push 65
[0674]: 33 00 00 00             <-- 	cout
[0678]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[0680]: 33 00 00 00             <-- 	cout
[0684]: 0a 00 00 00 79 00 00 00 <-- 	push 121
[068C]: 33 00 00 00             <-- 	cout
[0690]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0698]: 33 00 00 00             <-- 	cout
[069C]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[06A4]: 33 00 00 00             <-- 	cout
[06A8]: 0a 00 00 00 75 00 00 00 <-- 	push 117
[06B0]: 33 00 00 00             <-- 	cout
[06B4]: 0a 00 00 00 6d 00 00 00 <-- 	push 109
[06BC]: 33 00 00 00             <-- 	cout
[06C0]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[06C8]: 33 00 00 00             <-- 	cout
[06CC]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[06D4]: 33 00 00 00             <-- 	cout
[06D8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[06E0]: 33 00 00 00             <-- 	cout
[06E4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[06EC]: 33 00 00 00             <-- 	cout
[06F0]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[06F8]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0700]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0708]: 64 00 00 00             <-- 		return		
[070C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0714]: 14 00 00 00             <-- 	pop
[0718]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0720]: 64 00 00 00             <-- 	return

Time and date: Wed Oct 30 14:43:48 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000s
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:44:46 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000s
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:47:04 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:48:38 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:49:20 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:49:34 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:49:49 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:51:23 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:51:57 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:53:14 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:54:52 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 ff ff ff ff <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 ff ff ff ff <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 ff ff ff ff <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 02 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 ff ff ff ff <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 02 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:55:04 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:55:43 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:57:00 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:57:43 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:57:47 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 14:59:36 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 15:01:28 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 15:02:15 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 15:03:04 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 15:06:10 2019
Assemble listing for assembled.mubeg

[0008]: 46 00 00 00 d0 00 00 00 <-- call main
[0010]: 00 00 00 00             <-- end
[0014]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[001C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0024]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[002C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0034]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[003C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0044]: 29 00 00 00 1b 00 00 00 <-- 	ja addr_is_neg
[004C]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0054]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[005C]: 2d 00 00 00 21 00 00 00 <-- 	je a_is_zero
[0064]: 28 00 00 00 33 00 00 00 <-- 	jmp end_a_zero
[006C]: 0a 00 00 00 06 00 00 00 <-- 		push 6
[0074]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[007C]: 28 00 00 00 40 00 00 00 <-- 		jmp return_equal
[0084]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[008C]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0094]: 2e 00 00 00 2d 00 00 00 <-- 		jne b_is_not_zero
[009C]: 0a 00 00 00 07 00 00 00 <-- 		push 7 
[00A4]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[00AC]: 28 00 00 00 33 00 00 00 <-- 		jmp end_a_zero
[00B4]: 0a 00 00 00 00 00 00 00 <-- 			push 0
[00BC]: 15 00 00 00 00 00 00 00 <-- 			pop ax
[00C4]: 28 00 00 00 40 00 00 00 <-- 			jmp return_equal
[00CC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00D4]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[00DC]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[00E4]: 3c 00 00 00             <-- 	mul 
[00E8]: 17 00 00 00 02 00 00 00 <-- 	pop [cx
[00F0]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00F8]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0100]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0108]: 64 00 00 00             <-- 	return
[010C]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0114]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[011C]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0124]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[012C]: 0a 00 00 00 00 00 00 00 <-- 	push 0 
[0134]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[013C]: 2e 00 00 00 5f 00 00 00 <-- 	jne solveLinear_end
[0144]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[014C]: 14 00 00 00             <-- 		pop
[0150]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0158]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[0160]: 0b 00 00 00 02 00 00 00 <-- 		push cx
[0168]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[0170]: 46 00 00 00 05 00 00 00 <-- 		call solveLinear
[0178]: 64 00 00 00             <-- 		return 
[017C]: 0a 00 00 00 04 00 00 00 <-- 	push 4
[0184]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[018C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0194]: 3d 00 00 00             <-- 	fmul
[0198]: 3c 00 00 00             <-- 	mul
[019C]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01A4]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01AC]: 3d 00 00 00             <-- 	fmul
[01B0]: 50 00 00 00             <-- 	sub
[01B4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[01BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[01C4]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[01CC]: 2e 00 00 00 8c 00 00 00 <-- 	jne d_is_zero_end
[01D4]: 15 00 00 00 02 00 00 00 <-- 		pop cx
[01DC]: 0a 00 00 00 02 00 00 00 <-- 		push 2
[01E4]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[01EC]: 3c 00 00 00             <-- 		mul
[01F0]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[01F8]: 0a 00 00 00 ff ff ff ff <-- 		push -1
[0200]: 3c 00 00 00             <-- 		mul
[0204]: 6f 00 00 00             <-- 		fdiv  
[0208]: 0d 00 00 00 02 00 00 00 <-- 		push [cx
[0210]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[0218]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0220]: 14 00 00 00             <-- 		pop
[0224]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[022C]: 64 00 00 00             <-- 		return
[0230]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0238]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0240]: 2b 00 00 00 9b 00 00 00 <-- 	jb d_is_less_zero_end
[0248]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0250]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0258]: 14 00 00 00             <-- 		pop
[025C]: 14 00 00 00             <-- 		pop
[0260]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0268]: 64 00 00 00             <-- 		return
[026C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[0274]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[027C]: 3c 00 00 00             <-- 	mul
[0280]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0288]: 78 00 00 00             <-- 	sqrt
[028C]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[0294]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[029C]: 3c 00 00 00             <-- 	mul
[02A0]: 1e 00 00 00             <-- 	add
[02A4]: 6f 00 00 00             <-- 	fdiv 
[02A8]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[02B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[02B8]: 3c 00 00 00             <-- 	mul
[02BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[02C4]: 78 00 00 00             <-- 	sqrt
[02C8]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[02D0]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[02D8]: 3c 00 00 00             <-- 	mul
[02DC]: 50 00 00 00             <-- 	sub
[02E0]: 6f 00 00 00             <-- 	fdiv 
[02E4]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[02EC]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[02F4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[02FC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0304]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[030C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0314]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[031C]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[0324]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[032C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0334]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[033C]: 64 00 00 00             <-- 	return
[0340]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0348]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0350]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0358]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0360]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0368]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0370]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0378]: 0a 00 00 00 45 00 00 00 <-- 	push 69
[0380]: 33 00 00 00             <-- 	cout
[0384]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[038C]: 33 00 00 00             <-- 	cout
[0390]: 0a 00 00 00 74 00 00 00 <-- 	push 116
[0398]: 33 00 00 00             <-- 	cout
[039C]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[03A4]: 33 00 00 00             <-- 	cout
[03A8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[03B0]: 33 00 00 00             <-- 	cout
[03B4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03BC]: 33 00 00 00             <-- 	cout
[03C0]: 0a 00 00 00 61 00 00 00 <-- 	push 97
[03C8]: 33 00 00 00             <-- 	cout
[03CC]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03D4]: 33 00 00 00             <-- 	cout
[03D8]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03E0]: 33 00 00 00             <-- 	cout
[03E4]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[03EC]: 33 00 00 00             <-- 	cout
[03F0]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03F8]: 33 00 00 00             <-- 	cout
[03FC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0404]: 33 00 00 00             <-- 	cout
[0408]: 0a 00 00 00 63 00 00 00 <-- 	push 99
[0410]: 33 00 00 00             <-- 	cout
[0414]: 0a 00 00 00 3a 00 00 00 <-- 	push 58
[041C]: 33 00 00 00             <-- 	cout	
[0420]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0428]: 33 00 00 00             <-- 	cout
[042C]: 5b 00 00 00             <-- 	fin 
[0430]: 5b 00 00 00             <-- 	fin 
[0434]: 5b 00 00 00             <-- 	fin 
[0438]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0440]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0448]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0450]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0458]: 0c 00 00 00 00 00 00 00 <-- 	push [0]
[0460]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0468]: 0c 00 00 00 01 00 00 00 <-- 	push [1]
[0470]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0478]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0480]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0488]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0490]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[0498]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04A0]: 46 00 00 00 43 00 00 00 <-- 	call solveSquare
[04A8]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[04B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04B8]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[04C0]: 2e 00 00 00 4d 01 00 00 <-- 	jne case_1
[04C8]: 0a 00 00 00 4e 00 00 00 <-- 	push 78
[04D0]: 33 00 00 00             <-- 	cout
[04D4]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[04DC]: 33 00 00 00             <-- 	cout
[04E0]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[04E8]: 33 00 00 00             <-- 	cout
[04EC]: 0a 00 00 00 52 00 00 00 <-- 	push 82
[04F4]: 33 00 00 00             <-- 	cout
[04F8]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[0500]: 33 00 00 00             <-- 	cout
[0504]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[050C]: 33 00 00 00             <-- 	cout
[0510]: 0a 00 00 00 54 00 00 00 <-- 	push 84
[0518]: 33 00 00 00             <-- 	cout
[051C]: 0a 00 00 00 53 00 00 00 <-- 	push 83
[0524]: 33 00 00 00             <-- 	cout
[0528]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0530]: 33 00 00 00             <-- 	cout
[0534]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[053C]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0544]: 2e 00 00 00 65 01 00 00 <-- 	jne case_2
[054C]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0554]: 33 00 00 00             <-- 	cout
[0558]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0560]: 33 00 00 00             <-- 	cout
[0564]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[056C]: 33 00 00 00             <-- 	cout
[0570]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0578]: 33 00 00 00             <-- 	cout
[057C]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[0584]: 34 00 00 00             <-- 	fout
[0588]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0590]: 33 00 00 00             <-- 	cout
[0594]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[059C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[05A4]: 2e 00 00 00 95 01 00 00 <-- 	jne case_3
[05AC]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[05B4]: 33 00 00 00             <-- 	cout
[05B8]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[05C0]: 33 00 00 00             <-- 	cout
[05C4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05CC]: 33 00 00 00             <-- 	cout
[05D0]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[05D8]: 33 00 00 00             <-- 	cout
[05DC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05E4]: 33 00 00 00             <-- 	cout
[05E8]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[05F0]: 34 00 00 00             <-- 	fout
[05F4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[05FC]: 33 00 00 00             <-- 	cout
[0600]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0608]: 33 00 00 00             <-- 	cout
[060C]: 0a 00 00 00 32 00 00 00 <-- 	push 50
[0614]: 33 00 00 00             <-- 	cout
[0618]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0620]: 33 00 00 00             <-- 	cout
[0624]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[062C]: 33 00 00 00             <-- 	cout
[0630]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0638]: 33 00 00 00             <-- 	cout
[063C]: 16 00 00 00 01 00 00 00 <-- 	pop [1]
[0644]: 34 00 00 00             <-- 	fout
[0648]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0650]: 33 00 00 00             <-- 	cout
[0654]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[065C]: 0a 00 00 00 07 00 00 00 <-- 	push 7
[0664]: 2e 00 00 00 bc 01 00 00 <-- 	jne default_case
[066C]: 0a 00 00 00 41 00 00 00 <-- 	push 65
[0674]: 33 00 00 00             <-- 	cout
[0678]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[0680]: 33 00 00 00             <-- 	cout
[0684]: 0a 00 00 00 79 00 00 00 <-- 	push 121
[068C]: 33 00 00 00             <-- 	cout
[0690]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0698]: 33 00 00 00             <-- 	cout
[069C]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[06A4]: 33 00 00 00             <-- 	cout
[06A8]: 0a 00 00 00 75 00 00 00 <-- 	push 117
[06B0]: 33 00 00 00             <-- 	cout
[06B4]: 0a 00 00 00 6d 00 00 00 <-- 	push 109
[06BC]: 33 00 00 00             <-- 	cout
[06C0]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[06C8]: 33 00 00 00             <-- 	cout
[06CC]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[06D4]: 33 00 00 00             <-- 	cout
[06D8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[06E0]: 33 00 00 00             <-- 	cout
[06E4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[06EC]: 33 00 00 00             <-- 	cout
[06F0]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[06F8]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0700]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0708]: 64 00 00 00             <-- 		return		
[070C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0714]: 14 00 00 00             <-- 	pop
[0718]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0720]: 64 00 00 00             <-- 	return

Time and date: Wed Oct 30 15:07:38 2019
Assemble listing for assembled.mubeg

[0008]: 46 00 00 00 d0 00 00 00 <-- call main
[0010]: 00 00 00 00             <-- end
[0014]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[001C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0024]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[002C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0034]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[003C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0044]: 29 00 00 00 1b 00 00 00 <-- 	ja addr_is_neg
[004C]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0054]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[005C]: 2d 00 00 00 21 00 00 00 <-- 	je a_is_zero
[0064]: 28 00 00 00 33 00 00 00 <-- 	jmp end_a_zero
[006C]: 0a 00 00 00 06 00 00 00 <-- 		push 6
[0074]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[007C]: 28 00 00 00 40 00 00 00 <-- 		jmp return_equal
[0084]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[008C]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0094]: 2e 00 00 00 2d 00 00 00 <-- 		jne b_is_not_zero
[009C]: 0a 00 00 00 07 00 00 00 <-- 		push 7 
[00A4]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[00AC]: 28 00 00 00 33 00 00 00 <-- 		jmp end_a_zero
[00B4]: 0a 00 00 00 00 00 00 00 <-- 			push 0
[00BC]: 15 00 00 00 00 00 00 00 <-- 			pop ax
[00C4]: 28 00 00 00 40 00 00 00 <-- 			jmp return_equal
[00CC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00D4]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[00DC]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[00E4]: 3c 00 00 00             <-- 	mul 
[00E8]: 17 00 00 00 02 00 00 00 <-- 	pop [cx
[00F0]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00F8]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0100]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0108]: 64 00 00 00             <-- 	return
[010C]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0114]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[011C]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0124]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[012C]: 0a 00 00 00 00 00 00 00 <-- 	push 0 
[0134]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[013C]: 2e 00 00 00 5f 00 00 00 <-- 	jne solveLinear_end
[0144]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[014C]: 14 00 00 00             <-- 		pop
[0150]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0158]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[0160]: 0b 00 00 00 02 00 00 00 <-- 		push cx
[0168]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[0170]: 46 00 00 00 05 00 00 00 <-- 		call solveLinear
[0178]: 64 00 00 00             <-- 		return 
[017C]: 0a 00 00 00 04 00 00 00 <-- 	push 4
[0184]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[018C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0194]: 3d 00 00 00             <-- 	fmul
[0198]: 3c 00 00 00             <-- 	mul
[019C]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01A4]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01AC]: 3d 00 00 00             <-- 	fmul
[01B0]: 50 00 00 00             <-- 	sub
[01B4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[01BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[01C4]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[01CC]: 2e 00 00 00 8c 00 00 00 <-- 	jne d_is_zero_end
[01D4]: 15 00 00 00 02 00 00 00 <-- 		pop cx
[01DC]: 0a 00 00 00 02 00 00 00 <-- 		push 2
[01E4]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[01EC]: 3c 00 00 00             <-- 		mul
[01F0]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[01F8]: 0a 00 00 00 ff ff ff ff <-- 		push -1
[0200]: 3c 00 00 00             <-- 		mul
[0204]: 6f 00 00 00             <-- 		fdiv  
[0208]: 0d 00 00 00 02 00 00 00 <-- 		push [cx
[0210]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[0218]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0220]: 14 00 00 00             <-- 		pop
[0224]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[022C]: 64 00 00 00             <-- 		return
[0230]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0238]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0240]: 2b 00 00 00 9b 00 00 00 <-- 	jb d_is_less_zero_end
[0248]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0250]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0258]: 14 00 00 00             <-- 		pop
[025C]: 14 00 00 00             <-- 		pop
[0260]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0268]: 64 00 00 00             <-- 		return
[026C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[0274]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[027C]: 3c 00 00 00             <-- 	mul
[0280]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0288]: 78 00 00 00             <-- 	sqrt
[028C]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[0294]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[029C]: 3c 00 00 00             <-- 	mul
[02A0]: 1e 00 00 00             <-- 	add
[02A4]: 6f 00 00 00             <-- 	fdiv 
[02A8]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[02B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[02B8]: 3c 00 00 00             <-- 	mul
[02BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[02C4]: 78 00 00 00             <-- 	sqrt
[02C8]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[02D0]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[02D8]: 3c 00 00 00             <-- 	mul
[02DC]: 50 00 00 00             <-- 	sub
[02E0]: 6f 00 00 00             <-- 	fdiv 
[02E4]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[02EC]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[02F4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[02FC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0304]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[030C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0314]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[031C]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[0324]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[032C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0334]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[033C]: 64 00 00 00             <-- 	return
[0340]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0348]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0350]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0358]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0360]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0368]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0370]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0378]: 0a 00 00 00 45 00 00 00 <-- 	push 69
[0380]: 33 00 00 00             <-- 	cout
[0384]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[038C]: 33 00 00 00             <-- 	cout
[0390]: 0a 00 00 00 74 00 00 00 <-- 	push 116
[0398]: 33 00 00 00             <-- 	cout
[039C]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[03A4]: 33 00 00 00             <-- 	cout
[03A8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[03B0]: 33 00 00 00             <-- 	cout
[03B4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03BC]: 33 00 00 00             <-- 	cout
[03C0]: 0a 00 00 00 61 00 00 00 <-- 	push 97
[03C8]: 33 00 00 00             <-- 	cout
[03CC]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03D4]: 33 00 00 00             <-- 	cout
[03D8]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03E0]: 33 00 00 00             <-- 	cout
[03E4]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[03EC]: 33 00 00 00             <-- 	cout
[03F0]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03F8]: 33 00 00 00             <-- 	cout
[03FC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0404]: 33 00 00 00             <-- 	cout
[0408]: 0a 00 00 00 63 00 00 00 <-- 	push 99
[0410]: 33 00 00 00             <-- 	cout
[0414]: 0a 00 00 00 3a 00 00 00 <-- 	push 58
[041C]: 33 00 00 00             <-- 	cout	
[0420]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0428]: 33 00 00 00             <-- 	cout
[042C]: 5b 00 00 00             <-- 	fin 
[0430]: 5b 00 00 00             <-- 	fin 
[0434]: 5b 00 00 00             <-- 	fin 
[0438]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0440]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0448]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0450]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0458]: 0c 00 00 00 00 00 00 00 <-- 	push [0]
[0460]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0468]: 0c 00 00 00 01 00 00 00 <-- 	push [1]
[0470]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0478]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0480]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0488]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0490]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[0498]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04A0]: 46 00 00 00 43 00 00 00 <-- 	call solveSquare
[04A8]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[04B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04B8]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[04C0]: 2e 00 00 00 4d 01 00 00 <-- 	jne case_1
[04C8]: 0a 00 00 00 4e 00 00 00 <-- 	push 78
[04D0]: 33 00 00 00             <-- 	cout
[04D4]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[04DC]: 33 00 00 00             <-- 	cout
[04E0]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[04E8]: 33 00 00 00             <-- 	cout
[04EC]: 0a 00 00 00 52 00 00 00 <-- 	push 82
[04F4]: 33 00 00 00             <-- 	cout
[04F8]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[0500]: 33 00 00 00             <-- 	cout
[0504]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[050C]: 33 00 00 00             <-- 	cout
[0510]: 0a 00 00 00 54 00 00 00 <-- 	push 84
[0518]: 33 00 00 00             <-- 	cout
[051C]: 0a 00 00 00 53 00 00 00 <-- 	push 83
[0524]: 33 00 00 00             <-- 	cout
[0528]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0530]: 33 00 00 00             <-- 	cout
[0534]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[053C]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0544]: 2e 00 00 00 65 01 00 00 <-- 	jne case_2
[054C]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0554]: 33 00 00 00             <-- 	cout
[0558]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0560]: 33 00 00 00             <-- 	cout
[0564]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[056C]: 33 00 00 00             <-- 	cout
[0570]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0578]: 33 00 00 00             <-- 	cout
[057C]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[0584]: 34 00 00 00             <-- 	fout
[0588]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0590]: 33 00 00 00             <-- 	cout
[0594]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[059C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[05A4]: 2e 00 00 00 95 01 00 00 <-- 	jne case_3
[05AC]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[05B4]: 33 00 00 00             <-- 	cout
[05B8]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[05C0]: 33 00 00 00             <-- 	cout
[05C4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05CC]: 33 00 00 00             <-- 	cout
[05D0]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[05D8]: 33 00 00 00             <-- 	cout
[05DC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05E4]: 33 00 00 00             <-- 	cout
[05E8]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[05F0]: 34 00 00 00             <-- 	fout
[05F4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[05FC]: 33 00 00 00             <-- 	cout
[0600]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0608]: 33 00 00 00             <-- 	cout
[060C]: 0a 00 00 00 32 00 00 00 <-- 	push 50
[0614]: 33 00 00 00             <-- 	cout
[0618]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0620]: 33 00 00 00             <-- 	cout
[0624]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[062C]: 33 00 00 00             <-- 	cout
[0630]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0638]: 33 00 00 00             <-- 	cout
[063C]: 16 00 00 00 01 00 00 00 <-- 	pop [1]
[0644]: 34 00 00 00             <-- 	fout
[0648]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0650]: 33 00 00 00             <-- 	cout
[0654]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[065C]: 0a 00 00 00 07 00 00 00 <-- 	push 7
[0664]: 2e 00 00 00 bc 01 00 00 <-- 	jne default_case
[066C]: 0a 00 00 00 41 00 00 00 <-- 	push 65
[0674]: 33 00 00 00             <-- 	cout
[0678]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[0680]: 33 00 00 00             <-- 	cout
[0684]: 0a 00 00 00 79 00 00 00 <-- 	push 121
[068C]: 33 00 00 00             <-- 	cout
[0690]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0698]: 33 00 00 00             <-- 	cout
[069C]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[06A4]: 33 00 00 00             <-- 	cout
[06A8]: 0a 00 00 00 75 00 00 00 <-- 	push 117
[06B0]: 33 00 00 00             <-- 	cout
[06B4]: 0a 00 00 00 6d 00 00 00 <-- 	push 109
[06BC]: 33 00 00 00             <-- 	cout
[06C0]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[06C8]: 33 00 00 00             <-- 	cout
[06CC]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[06D4]: 33 00 00 00             <-- 	cout
[06D8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[06E0]: 33 00 00 00             <-- 	cout
[06E4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[06EC]: 33 00 00 00             <-- 	cout
[06F0]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[06F8]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0700]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0708]: 64 00 00 00             <-- 		return		
[070C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0714]: 14 00 00 00             <-- 	pop
[0718]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0720]: 64 00 00 00             <-- 	return

Time and date: Wed Oct 30 15:10:13 2019
Assemble listing for assembled.mubeg

[0008]: 46 00 00 00 d0 00 00 00 <-- call main
[0010]: 00 00 00 00             <-- end
[0014]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[001C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0024]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[002C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0034]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[003C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0044]: 29 00 00 00 1b 00 00 00 <-- 	ja addr_is_neg
[004C]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0054]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[005C]: 2d 00 00 00 21 00 00 00 <-- 	je a_is_zero
[0064]: 28 00 00 00 33 00 00 00 <-- 	jmp end_a_zero
[006C]: 0a 00 00 00 06 00 00 00 <-- 		push 6
[0074]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[007C]: 28 00 00 00 40 00 00 00 <-- 		jmp return_equal
[0084]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[008C]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0094]: 2e 00 00 00 2d 00 00 00 <-- 		jne b_is_not_zero
[009C]: 0a 00 00 00 07 00 00 00 <-- 		push 7 
[00A4]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[00AC]: 28 00 00 00 33 00 00 00 <-- 		jmp end_a_zero
[00B4]: 0a 00 00 00 00 00 00 00 <-- 			push 0
[00BC]: 15 00 00 00 00 00 00 00 <-- 			pop ax
[00C4]: 28 00 00 00 40 00 00 00 <-- 			jmp return_equal
[00CC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00D4]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[00DC]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[00E4]: 3c 00 00 00             <-- 	mul 
[00E8]: 17 00 00 00 02 00 00 00 <-- 	pop [cx
[00F0]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00F8]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0100]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0108]: 64 00 00 00             <-- 	return
[010C]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0114]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[011C]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0124]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[012C]: 0a 00 00 00 00 00 00 00 <-- 	push 0 
[0134]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[013C]: 2e 00 00 00 5f 00 00 00 <-- 	jne solveLinear_end
[0144]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[014C]: 14 00 00 00             <-- 		pop
[0150]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0158]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[0160]: 0b 00 00 00 02 00 00 00 <-- 		push cx
[0168]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[0170]: 46 00 00 00 05 00 00 00 <-- 		call solveLinear
[0178]: 64 00 00 00             <-- 		return 
[017C]: 0a 00 00 00 04 00 00 00 <-- 	push 4
[0184]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[018C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0194]: 3d 00 00 00             <-- 	fmul
[0198]: 3c 00 00 00             <-- 	mul
[019C]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01A4]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01AC]: 3d 00 00 00             <-- 	fmul
[01B0]: 50 00 00 00             <-- 	sub
[01B4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[01BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[01C4]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[01CC]: 2e 00 00 00 8c 00 00 00 <-- 	jne d_is_zero_end
[01D4]: 15 00 00 00 02 00 00 00 <-- 		pop cx
[01DC]: 0a 00 00 00 02 00 00 00 <-- 		push 2
[01E4]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[01EC]: 3c 00 00 00             <-- 		mul
[01F0]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[01F8]: 0a 00 00 00 ff ff ff ff <-- 		push -1
[0200]: 3c 00 00 00             <-- 		mul
[0204]: 6f 00 00 00             <-- 		fdiv  
[0208]: 0d 00 00 00 02 00 00 00 <-- 		push [cx
[0210]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[0218]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0220]: 14 00 00 00             <-- 		pop
[0224]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[022C]: 64 00 00 00             <-- 		return
[0230]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0238]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0240]: 2b 00 00 00 9b 00 00 00 <-- 	jb d_is_less_zero_end
[0248]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0250]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0258]: 14 00 00 00             <-- 		pop
[025C]: 14 00 00 00             <-- 		pop
[0260]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0268]: 64 00 00 00             <-- 		return
[026C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[0274]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[027C]: 3c 00 00 00             <-- 	mul
[0280]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0288]: 78 00 00 00             <-- 	sqrt
[028C]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[0294]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[029C]: 3c 00 00 00             <-- 	mul
[02A0]: 1e 00 00 00             <-- 	add
[02A4]: 6f 00 00 00             <-- 	fdiv 
[02A8]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[02B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[02B8]: 3c 00 00 00             <-- 	mul
[02BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[02C4]: 78 00 00 00             <-- 	sqrt
[02C8]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[02D0]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[02D8]: 3c 00 00 00             <-- 	mul
[02DC]: 50 00 00 00             <-- 	sub
[02E0]: 6f 00 00 00             <-- 	fdiv 
[02E4]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[02EC]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[02F4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[02FC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0304]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[030C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0314]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[031C]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[0324]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[032C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0334]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[033C]: 64 00 00 00             <-- 	return
[0340]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0348]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0350]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0358]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0360]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0368]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0370]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0378]: 0a 00 00 00 45 00 00 00 <-- 	push 69
[0380]: 33 00 00 00             <-- 	cout
[0384]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[038C]: 33 00 00 00             <-- 	cout
[0390]: 0a 00 00 00 74 00 00 00 <-- 	push 116
[0398]: 33 00 00 00             <-- 	cout
[039C]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[03A4]: 33 00 00 00             <-- 	cout
[03A8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[03B0]: 33 00 00 00             <-- 	cout
[03B4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03BC]: 33 00 00 00             <-- 	cout
[03C0]: 0a 00 00 00 61 00 00 00 <-- 	push 97
[03C8]: 33 00 00 00             <-- 	cout
[03CC]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03D4]: 33 00 00 00             <-- 	cout
[03D8]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03E0]: 33 00 00 00             <-- 	cout
[03E4]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[03EC]: 33 00 00 00             <-- 	cout
[03F0]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03F8]: 33 00 00 00             <-- 	cout
[03FC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0404]: 33 00 00 00             <-- 	cout
[0408]: 0a 00 00 00 63 00 00 00 <-- 	push 99
[0410]: 33 00 00 00             <-- 	cout
[0414]: 0a 00 00 00 3a 00 00 00 <-- 	push 58
[041C]: 33 00 00 00             <-- 	cout	
[0420]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0428]: 33 00 00 00             <-- 	cout
[042C]: 5b 00 00 00             <-- 	fin 
[0430]: 5b 00 00 00             <-- 	fin 
[0434]: 5b 00 00 00             <-- 	fin 
[0438]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0440]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0448]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0450]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0458]: 0c 00 00 00 00 00 00 00 <-- 	push [0]
[0460]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0468]: 0c 00 00 00 01 00 00 00 <-- 	push [1]
[0470]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0478]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0480]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0488]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0490]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[0498]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04A0]: 46 00 00 00 43 00 00 00 <-- 	call solveSquare
[04A8]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[04B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04B8]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[04C0]: 2e 00 00 00 4d 01 00 00 <-- 	jne case_1
[04C8]: 0a 00 00 00 4e 00 00 00 <-- 	push 78
[04D0]: 33 00 00 00             <-- 	cout
[04D4]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[04DC]: 33 00 00 00             <-- 	cout
[04E0]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[04E8]: 33 00 00 00             <-- 	cout
[04EC]: 0a 00 00 00 52 00 00 00 <-- 	push 82
[04F4]: 33 00 00 00             <-- 	cout
[04F8]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[0500]: 33 00 00 00             <-- 	cout
[0504]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[050C]: 33 00 00 00             <-- 	cout
[0510]: 0a 00 00 00 54 00 00 00 <-- 	push 84
[0518]: 33 00 00 00             <-- 	cout
[051C]: 0a 00 00 00 53 00 00 00 <-- 	push 83
[0524]: 33 00 00 00             <-- 	cout
[0528]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0530]: 33 00 00 00             <-- 	cout
[0534]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[053C]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0544]: 2e 00 00 00 65 01 00 00 <-- 	jne case_2
[054C]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0554]: 33 00 00 00             <-- 	cout
[0558]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0560]: 33 00 00 00             <-- 	cout
[0564]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[056C]: 33 00 00 00             <-- 	cout
[0570]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0578]: 33 00 00 00             <-- 	cout
[057C]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[0584]: 34 00 00 00             <-- 	fout
[0588]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0590]: 33 00 00 00             <-- 	cout
[0594]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[059C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[05A4]: 2e 00 00 00 95 01 00 00 <-- 	jne case_3
[05AC]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[05B4]: 33 00 00 00             <-- 	cout
[05B8]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[05C0]: 33 00 00 00             <-- 	cout
[05C4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05CC]: 33 00 00 00             <-- 	cout
[05D0]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[05D8]: 33 00 00 00             <-- 	cout
[05DC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05E4]: 33 00 00 00             <-- 	cout
[05E8]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[05F0]: 34 00 00 00             <-- 	fout
[05F4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[05FC]: 33 00 00 00             <-- 	cout
[0600]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0608]: 33 00 00 00             <-- 	cout
[060C]: 0a 00 00 00 32 00 00 00 <-- 	push 50
[0614]: 33 00 00 00             <-- 	cout
[0618]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0620]: 33 00 00 00             <-- 	cout
[0624]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[062C]: 33 00 00 00             <-- 	cout
[0630]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0638]: 33 00 00 00             <-- 	cout
[063C]: 16 00 00 00 01 00 00 00 <-- 	pop [1]
[0644]: 34 00 00 00             <-- 	fout
[0648]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0650]: 33 00 00 00             <-- 	cout
[0654]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[065C]: 0a 00 00 00 07 00 00 00 <-- 	push 7
[0664]: 2e 00 00 00 bc 01 00 00 <-- 	jne default_case
[066C]: 0a 00 00 00 41 00 00 00 <-- 	push 65
[0674]: 33 00 00 00             <-- 	cout
[0678]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[0680]: 33 00 00 00             <-- 	cout
[0684]: 0a 00 00 00 79 00 00 00 <-- 	push 121
[068C]: 33 00 00 00             <-- 	cout
[0690]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0698]: 33 00 00 00             <-- 	cout
[069C]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[06A4]: 33 00 00 00             <-- 	cout
[06A8]: 0a 00 00 00 75 00 00 00 <-- 	push 117
[06B0]: 33 00 00 00             <-- 	cout
[06B4]: 0a 00 00 00 6d 00 00 00 <-- 	push 109
[06BC]: 33 00 00 00             <-- 	cout
[06C0]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[06C8]: 33 00 00 00             <-- 	cout
[06CC]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[06D4]: 33 00 00 00             <-- 	cout
[06D8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[06E0]: 33 00 00 00             <-- 	cout
[06E4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[06EC]: 33 00 00 00             <-- 	cout
[06F0]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[06F8]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0700]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0708]: 64 00 00 00             <-- 		return		
[070C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0714]: 14 00 00 00             <-- 	pop
[0718]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0720]: 64 00 00 00             <-- 	return

Time and date: Wed Oct 30 15:11:22 2019
Assemble listing for assembled.mubeg

[0008]: 46 00 00 00 d0 00 00 00 <-- call main
[0010]: 00 00 00 00             <-- end
[0014]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[001C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0024]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[002C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0034]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[003C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0044]: 29 00 00 00 1b 00 00 00 <-- 	ja addr_is_neg
[004C]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0054]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[005C]: 2d 00 00 00 21 00 00 00 <-- 	je a_is_zero
[0064]: 28 00 00 00 33 00 00 00 <-- 	jmp end_a_zero
[006C]: 0a 00 00 00 06 00 00 00 <-- 		push 6
[0074]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[007C]: 28 00 00 00 40 00 00 00 <-- 		jmp return_equal
[0084]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[008C]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0094]: 2e 00 00 00 2d 00 00 00 <-- 		jne b_is_not_zero
[009C]: 0a 00 00 00 07 00 00 00 <-- 		push 7 
[00A4]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[00AC]: 28 00 00 00 33 00 00 00 <-- 		jmp end_a_zero
[00B4]: 0a 00 00 00 00 00 00 00 <-- 			push 0
[00BC]: 15 00 00 00 00 00 00 00 <-- 			pop ax
[00C4]: 28 00 00 00 40 00 00 00 <-- 			jmp return_equal
[00CC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00D4]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[00DC]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[00E4]: 3c 00 00 00             <-- 	mul 
[00E8]: 17 00 00 00 02 00 00 00 <-- 	pop [cx
[00F0]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00F8]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0100]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0108]: 64 00 00 00             <-- 	return
[010C]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0114]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[011C]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0124]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[012C]: 0a 00 00 00 00 00 00 00 <-- 	push 0 
[0134]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[013C]: 2e 00 00 00 5f 00 00 00 <-- 	jne solveLinear_end
[0144]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[014C]: 14 00 00 00             <-- 		pop
[0150]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0158]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[0160]: 0b 00 00 00 02 00 00 00 <-- 		push cx
[0168]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[0170]: 46 00 00 00 05 00 00 00 <-- 		call solveLinear
[0178]: 64 00 00 00             <-- 		return 
[017C]: 0a 00 00 00 04 00 00 00 <-- 	push 4
[0184]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[018C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0194]: 3d 00 00 00             <-- 	fmul
[0198]: 3c 00 00 00             <-- 	mul
[019C]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01A4]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01AC]: 3d 00 00 00             <-- 	fmul
[01B0]: 50 00 00 00             <-- 	sub
[01B4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[01BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[01C4]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[01CC]: 2e 00 00 00 8c 00 00 00 <-- 	jne d_is_zero_end
[01D4]: 15 00 00 00 02 00 00 00 <-- 		pop cx
[01DC]: 0a 00 00 00 02 00 00 00 <-- 		push 2
[01E4]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[01EC]: 3c 00 00 00             <-- 		mul
[01F0]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[01F8]: 0a 00 00 00 ff ff ff ff <-- 		push -1
[0200]: 3c 00 00 00             <-- 		mul
[0204]: 6f 00 00 00             <-- 		fdiv  
[0208]: 0d 00 00 00 02 00 00 00 <-- 		push [cx
[0210]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[0218]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0220]: 14 00 00 00             <-- 		pop
[0224]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[022C]: 64 00 00 00             <-- 		return
[0230]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0238]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0240]: 2b 00 00 00 9b 00 00 00 <-- 	jb d_is_less_zero_end
[0248]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0250]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0258]: 14 00 00 00             <-- 		pop
[025C]: 14 00 00 00             <-- 		pop
[0260]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0268]: 64 00 00 00             <-- 		return
[026C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[0274]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[027C]: 3c 00 00 00             <-- 	mul
[0280]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0288]: 78 00 00 00             <-- 	sqrt
[028C]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[0294]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[029C]: 3c 00 00 00             <-- 	mul
[02A0]: 1e 00 00 00             <-- 	add
[02A4]: 6f 00 00 00             <-- 	fdiv 
[02A8]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[02B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[02B8]: 3c 00 00 00             <-- 	mul
[02BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[02C4]: 78 00 00 00             <-- 	sqrt
[02C8]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[02D0]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[02D8]: 3c 00 00 00             <-- 	mul
[02DC]: 50 00 00 00             <-- 	sub
[02E0]: 6f 00 00 00             <-- 	fdiv 
[02E4]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[02EC]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[02F4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[02FC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0304]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[030C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0314]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[031C]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[0324]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[032C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0334]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[033C]: 64 00 00 00             <-- 	return
[0340]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0348]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0350]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0358]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0360]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0368]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0370]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0378]: 0a 00 00 00 45 00 00 00 <-- 	push 69
[0380]: 33 00 00 00             <-- 	cout
[0384]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[038C]: 33 00 00 00             <-- 	cout
[0390]: 0a 00 00 00 74 00 00 00 <-- 	push 116
[0398]: 33 00 00 00             <-- 	cout
[039C]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[03A4]: 33 00 00 00             <-- 	cout
[03A8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[03B0]: 33 00 00 00             <-- 	cout
[03B4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03BC]: 33 00 00 00             <-- 	cout
[03C0]: 0a 00 00 00 61 00 00 00 <-- 	push 97
[03C8]: 33 00 00 00             <-- 	cout
[03CC]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03D4]: 33 00 00 00             <-- 	cout
[03D8]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03E0]: 33 00 00 00             <-- 	cout
[03E4]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[03EC]: 33 00 00 00             <-- 	cout
[03F0]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03F8]: 33 00 00 00             <-- 	cout
[03FC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0404]: 33 00 00 00             <-- 	cout
[0408]: 0a 00 00 00 63 00 00 00 <-- 	push 99
[0410]: 33 00 00 00             <-- 	cout
[0414]: 0a 00 00 00 3a 00 00 00 <-- 	push 58
[041C]: 33 00 00 00             <-- 	cout	
[0420]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0428]: 33 00 00 00             <-- 	cout
[042C]: 5b 00 00 00             <-- 	fin 
[0430]: 5b 00 00 00             <-- 	fin 
[0434]: 5b 00 00 00             <-- 	fin 
[0438]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0440]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0448]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0450]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0458]: 0c 00 00 00 00 00 00 00 <-- 	push [0]
[0460]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0468]: 0c 00 00 00 01 00 00 00 <-- 	push [1]
[0470]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0478]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0480]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0488]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0490]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[0498]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04A0]: 46 00 00 00 43 00 00 00 <-- 	call solveSquare
[04A8]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[04B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04B8]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[04C0]: 2e 00 00 00 4d 01 00 00 <-- 	jne case_1
[04C8]: 0a 00 00 00 4e 00 00 00 <-- 	push 78
[04D0]: 33 00 00 00             <-- 	cout
[04D4]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[04DC]: 33 00 00 00             <-- 	cout
[04E0]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[04E8]: 33 00 00 00             <-- 	cout
[04EC]: 0a 00 00 00 52 00 00 00 <-- 	push 82
[04F4]: 33 00 00 00             <-- 	cout
[04F8]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[0500]: 33 00 00 00             <-- 	cout
[0504]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[050C]: 33 00 00 00             <-- 	cout
[0510]: 0a 00 00 00 54 00 00 00 <-- 	push 84
[0518]: 33 00 00 00             <-- 	cout
[051C]: 0a 00 00 00 53 00 00 00 <-- 	push 83
[0524]: 33 00 00 00             <-- 	cout
[0528]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0530]: 33 00 00 00             <-- 	cout
[0534]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[053C]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0544]: 2e 00 00 00 65 01 00 00 <-- 	jne case_2
[054C]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0554]: 33 00 00 00             <-- 	cout
[0558]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0560]: 33 00 00 00             <-- 	cout
[0564]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[056C]: 33 00 00 00             <-- 	cout
[0570]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0578]: 33 00 00 00             <-- 	cout
[057C]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[0584]: 34 00 00 00             <-- 	fout
[0588]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0590]: 33 00 00 00             <-- 	cout
[0594]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[059C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[05A4]: 2e 00 00 00 95 01 00 00 <-- 	jne case_3
[05AC]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[05B4]: 33 00 00 00             <-- 	cout
[05B8]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[05C0]: 33 00 00 00             <-- 	cout
[05C4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05CC]: 33 00 00 00             <-- 	cout
[05D0]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[05D8]: 33 00 00 00             <-- 	cout
[05DC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05E4]: 33 00 00 00             <-- 	cout
[05E8]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[05F0]: 34 00 00 00             <-- 	fout
[05F4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[05FC]: 33 00 00 00             <-- 	cout
[0600]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0608]: 33 00 00 00             <-- 	cout
[060C]: 0a 00 00 00 32 00 00 00 <-- 	push 50
[0614]: 33 00 00 00             <-- 	cout
[0618]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0620]: 33 00 00 00             <-- 	cout
[0624]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[062C]: 33 00 00 00             <-- 	cout
[0630]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0638]: 33 00 00 00             <-- 	cout
[063C]: 16 00 00 00 01 00 00 00 <-- 	pop [1]
[0644]: 34 00 00 00             <-- 	fout
[0648]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0650]: 33 00 00 00             <-- 	cout
[0654]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[065C]: 0a 00 00 00 07 00 00 00 <-- 	push 7
[0664]: 2e 00 00 00 bc 01 00 00 <-- 	jne default_case
[066C]: 0a 00 00 00 41 00 00 00 <-- 	push 65
[0674]: 33 00 00 00             <-- 	cout
[0678]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[0680]: 33 00 00 00             <-- 	cout
[0684]: 0a 00 00 00 79 00 00 00 <-- 	push 121
[068C]: 33 00 00 00             <-- 	cout
[0690]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0698]: 33 00 00 00             <-- 	cout
[069C]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[06A4]: 33 00 00 00             <-- 	cout
[06A8]: 0a 00 00 00 75 00 00 00 <-- 	push 117
[06B0]: 33 00 00 00             <-- 	cout
[06B4]: 0a 00 00 00 6d 00 00 00 <-- 	push 109
[06BC]: 33 00 00 00             <-- 	cout
[06C0]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[06C8]: 33 00 00 00             <-- 	cout
[06CC]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[06D4]: 33 00 00 00             <-- 	cout
[06D8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[06E0]: 33 00 00 00             <-- 	cout
[06E4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[06EC]: 33 00 00 00             <-- 	cout
[06F0]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[06F8]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0700]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0708]: 64 00 00 00             <-- 		return		
[070C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0714]: 14 00 00 00             <-- 	pop
[0718]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0720]: 64 00 00 00             <-- 	return

Time and date: Wed Oct 30 15:11:54 2019
Assemble listing for assembled.mubeg

[0008]: 46 00 00 00 d0 00 00 00 <-- call main
[0010]: 00 00 00 00             <-- end
[0014]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[001C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0024]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[002C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0034]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[003C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0044]: 29 00 00 00 1b 00 00 00 <-- 	ja addr_is_neg
[004C]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0054]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[005C]: 2d 00 00 00 21 00 00 00 <-- 	je a_is_zero
[0064]: 28 00 00 00 33 00 00 00 <-- 	jmp end_a_zero
[006C]: 0a 00 00 00 06 00 00 00 <-- 		push 6
[0074]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[007C]: 28 00 00 00 40 00 00 00 <-- 		jmp return_equal
[0084]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[008C]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0094]: 2e 00 00 00 2d 00 00 00 <-- 		jne b_is_not_zero
[009C]: 0a 00 00 00 07 00 00 00 <-- 		push 7 
[00A4]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[00AC]: 28 00 00 00 33 00 00 00 <-- 		jmp end_a_zero
[00B4]: 0a 00 00 00 00 00 00 00 <-- 			push 0
[00BC]: 15 00 00 00 00 00 00 00 <-- 			pop ax
[00C4]: 28 00 00 00 40 00 00 00 <-- 			jmp return_equal
[00CC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00D4]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[00DC]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[00E4]: 3c 00 00 00             <-- 	mul 
[00E8]: 17 00 00 00 02 00 00 00 <-- 	pop [cx
[00F0]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00F8]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0100]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0108]: 64 00 00 00             <-- 	return
[010C]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0114]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[011C]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0124]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[012C]: 0a 00 00 00 00 00 00 00 <-- 	push 0 
[0134]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[013C]: 2e 00 00 00 5f 00 00 00 <-- 	jne solveLinear_end
[0144]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[014C]: 14 00 00 00             <-- 		pop
[0150]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0158]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[0160]: 0b 00 00 00 02 00 00 00 <-- 		push cx
[0168]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[0170]: 46 00 00 00 05 00 00 00 <-- 		call solveLinear
[0178]: 64 00 00 00             <-- 		return 
[017C]: 0a 00 00 00 04 00 00 00 <-- 	push 4
[0184]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[018C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0194]: 3d 00 00 00             <-- 	fmul
[0198]: 3c 00 00 00             <-- 	mul
[019C]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01A4]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01AC]: 3d 00 00 00             <-- 	fmul
[01B0]: 50 00 00 00             <-- 	sub
[01B4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[01BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[01C4]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[01CC]: 2e 00 00 00 8c 00 00 00 <-- 	jne d_is_zero_end
[01D4]: 15 00 00 00 02 00 00 00 <-- 		pop cx
[01DC]: 0a 00 00 00 02 00 00 00 <-- 		push 2
[01E4]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[01EC]: 3c 00 00 00             <-- 		mul
[01F0]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[01F8]: 0a 00 00 00 ff ff ff ff <-- 		push -1
[0200]: 3c 00 00 00             <-- 		mul
[0204]: 6f 00 00 00             <-- 		fdiv  
[0208]: 0d 00 00 00 02 00 00 00 <-- 		push [cx
[0210]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[0218]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0220]: 14 00 00 00             <-- 		pop
[0224]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[022C]: 64 00 00 00             <-- 		return
[0230]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0238]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0240]: 2b 00 00 00 9b 00 00 00 <-- 	jb d_is_less_zero_end
[0248]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0250]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0258]: 14 00 00 00             <-- 		pop
[025C]: 14 00 00 00             <-- 		pop
[0260]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0268]: 64 00 00 00             <-- 		return
[026C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[0274]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[027C]: 3c 00 00 00             <-- 	mul
[0280]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0288]: 78 00 00 00             <-- 	sqrt
[028C]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[0294]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[029C]: 3c 00 00 00             <-- 	mul
[02A0]: 1e 00 00 00             <-- 	add
[02A4]: 6f 00 00 00             <-- 	fdiv 
[02A8]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[02B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[02B8]: 3c 00 00 00             <-- 	mul
[02BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[02C4]: 78 00 00 00             <-- 	sqrt
[02C8]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[02D0]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[02D8]: 3c 00 00 00             <-- 	mul
[02DC]: 50 00 00 00             <-- 	sub
[02E0]: 6f 00 00 00             <-- 	fdiv 
[02E4]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[02EC]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[02F4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[02FC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0304]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[030C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0314]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[031C]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[0324]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[032C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0334]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[033C]: 64 00 00 00             <-- 	return
[0340]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0348]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0350]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0358]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0360]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0368]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0370]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0378]: 0a 00 00 00 45 00 00 00 <-- 	push 69
[0380]: 33 00 00 00             <-- 	cout
[0384]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[038C]: 33 00 00 00             <-- 	cout
[0390]: 0a 00 00 00 74 00 00 00 <-- 	push 116
[0398]: 33 00 00 00             <-- 	cout
[039C]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[03A4]: 33 00 00 00             <-- 	cout
[03A8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[03B0]: 33 00 00 00             <-- 	cout
[03B4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03BC]: 33 00 00 00             <-- 	cout
[03C0]: 0a 00 00 00 61 00 00 00 <-- 	push 97
[03C8]: 33 00 00 00             <-- 	cout
[03CC]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03D4]: 33 00 00 00             <-- 	cout
[03D8]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03E0]: 33 00 00 00             <-- 	cout
[03E4]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[03EC]: 33 00 00 00             <-- 	cout
[03F0]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03F8]: 33 00 00 00             <-- 	cout
[03FC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0404]: 33 00 00 00             <-- 	cout
[0408]: 0a 00 00 00 63 00 00 00 <-- 	push 99
[0410]: 33 00 00 00             <-- 	cout
[0414]: 0a 00 00 00 3a 00 00 00 <-- 	push 58
[041C]: 33 00 00 00             <-- 	cout	
[0420]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0428]: 33 00 00 00             <-- 	cout
[042C]: 5b 00 00 00             <-- 	fin 
[0430]: 5b 00 00 00             <-- 	fin 
[0434]: 5b 00 00 00             <-- 	fin 
[0438]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0440]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0448]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0450]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0458]: 0c 00 00 00 00 00 00 00 <-- 	push [0]
[0460]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0468]: 0c 00 00 00 01 00 00 00 <-- 	push [1]
[0470]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0478]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0480]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0488]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0490]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[0498]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04A0]: 46 00 00 00 43 00 00 00 <-- 	call solveSquare
[04A8]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[04B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04B8]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[04C0]: 2e 00 00 00 4d 01 00 00 <-- 	jne case_1
[04C8]: 0a 00 00 00 4e 00 00 00 <-- 	push 78
[04D0]: 33 00 00 00             <-- 	cout
[04D4]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[04DC]: 33 00 00 00             <-- 	cout
[04E0]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[04E8]: 33 00 00 00             <-- 	cout
[04EC]: 0a 00 00 00 52 00 00 00 <-- 	push 82
[04F4]: 33 00 00 00             <-- 	cout
[04F8]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[0500]: 33 00 00 00             <-- 	cout
[0504]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[050C]: 33 00 00 00             <-- 	cout
[0510]: 0a 00 00 00 54 00 00 00 <-- 	push 84
[0518]: 33 00 00 00             <-- 	cout
[051C]: 0a 00 00 00 53 00 00 00 <-- 	push 83
[0524]: 33 00 00 00             <-- 	cout
[0528]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0530]: 33 00 00 00             <-- 	cout
[0534]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[053C]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0544]: 2e 00 00 00 65 01 00 00 <-- 	jne case_2
[054C]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0554]: 33 00 00 00             <-- 	cout
[0558]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0560]: 33 00 00 00             <-- 	cout
[0564]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[056C]: 33 00 00 00             <-- 	cout
[0570]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0578]: 33 00 00 00             <-- 	cout
[057C]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[0584]: 34 00 00 00             <-- 	fout
[0588]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0590]: 33 00 00 00             <-- 	cout
[0594]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[059C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[05A4]: 2e 00 00 00 95 01 00 00 <-- 	jne case_3
[05AC]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[05B4]: 33 00 00 00             <-- 	cout
[05B8]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[05C0]: 33 00 00 00             <-- 	cout
[05C4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05CC]: 33 00 00 00             <-- 	cout
[05D0]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[05D8]: 33 00 00 00             <-- 	cout
[05DC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05E4]: 33 00 00 00             <-- 	cout
[05E8]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[05F0]: 34 00 00 00             <-- 	fout
[05F4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[05FC]: 33 00 00 00             <-- 	cout
[0600]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0608]: 33 00 00 00             <-- 	cout
[060C]: 0a 00 00 00 32 00 00 00 <-- 	push 50
[0614]: 33 00 00 00             <-- 	cout
[0618]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0620]: 33 00 00 00             <-- 	cout
[0624]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[062C]: 33 00 00 00             <-- 	cout
[0630]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0638]: 33 00 00 00             <-- 	cout
[063C]: 16 00 00 00 01 00 00 00 <-- 	pop [1]
[0644]: 34 00 00 00             <-- 	fout
[0648]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0650]: 33 00 00 00             <-- 	cout
[0654]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[065C]: 0a 00 00 00 07 00 00 00 <-- 	push 7
[0664]: 2e 00 00 00 bc 01 00 00 <-- 	jne default_case
[066C]: 0a 00 00 00 41 00 00 00 <-- 	push 65
[0674]: 33 00 00 00             <-- 	cout
[0678]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[0680]: 33 00 00 00             <-- 	cout
[0684]: 0a 00 00 00 79 00 00 00 <-- 	push 121
[068C]: 33 00 00 00             <-- 	cout
[0690]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0698]: 33 00 00 00             <-- 	cout
[069C]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[06A4]: 33 00 00 00             <-- 	cout
[06A8]: 0a 00 00 00 75 00 00 00 <-- 	push 117
[06B0]: 33 00 00 00             <-- 	cout
[06B4]: 0a 00 00 00 6d 00 00 00 <-- 	push 109
[06BC]: 33 00 00 00             <-- 	cout
[06C0]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[06C8]: 33 00 00 00             <-- 	cout
[06CC]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[06D4]: 33 00 00 00             <-- 	cout
[06D8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[06E0]: 33 00 00 00             <-- 	cout
[06E4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[06EC]: 33 00 00 00             <-- 	cout
[06F0]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[06F8]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0700]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0708]: 64 00 00 00             <-- 		return		
[070C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0714]: 14 00 00 00             <-- 	pop
[0718]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0720]: 64 00 00 00             <-- 	return

Time and date: Wed Oct 30 15:12:04 2019
Assemble listing for assembled.mubeg

[0008]: 46 00 00 00 d0 00 00 00 <-- call main
[0010]: 00 00 00 00             <-- end
[0014]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[001C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0024]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[002C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0034]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[003C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0044]: 29 00 00 00 1b 00 00 00 <-- 	ja addr_is_neg
[004C]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0054]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[005C]: 2d 00 00 00 21 00 00 00 <-- 	je a_is_zero
[0064]: 28 00 00 00 33 00 00 00 <-- 	jmp end_a_zero
[006C]: 0a 00 00 00 06 00 00 00 <-- 		push 6
[0074]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[007C]: 28 00 00 00 40 00 00 00 <-- 		jmp return_equal
[0084]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[008C]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0094]: 2e 00 00 00 2d 00 00 00 <-- 		jne b_is_not_zero
[009C]: 0a 00 00 00 07 00 00 00 <-- 		push 7 
[00A4]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[00AC]: 28 00 00 00 33 00 00 00 <-- 		jmp end_a_zero
[00B4]: 0a 00 00 00 00 00 00 00 <-- 			push 0
[00BC]: 15 00 00 00 00 00 00 00 <-- 			pop ax
[00C4]: 28 00 00 00 40 00 00 00 <-- 			jmp return_equal
[00CC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00D4]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[00DC]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[00E4]: 3c 00 00 00             <-- 	mul 
[00E8]: 17 00 00 00 02 00 00 00 <-- 	pop [cx
[00F0]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00F8]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0100]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0108]: 64 00 00 00             <-- 	return
[010C]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0114]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[011C]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0124]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[012C]: 0a 00 00 00 00 00 00 00 <-- 	push 0 
[0134]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[013C]: 2e 00 00 00 5f 00 00 00 <-- 	jne solveLinear_end
[0144]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[014C]: 14 00 00 00             <-- 		pop
[0150]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0158]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[0160]: 0b 00 00 00 02 00 00 00 <-- 		push cx
[0168]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[0170]: 46 00 00 00 05 00 00 00 <-- 		call solveLinear
[0178]: 64 00 00 00             <-- 		return 
[017C]: 0a 00 00 00 04 00 00 00 <-- 	push 4
[0184]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[018C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0194]: 3d 00 00 00             <-- 	fmul
[0198]: 3c 00 00 00             <-- 	mul
[019C]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01A4]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01AC]: 3d 00 00 00             <-- 	fmul
[01B0]: 50 00 00 00             <-- 	sub
[01B4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[01BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[01C4]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[01CC]: 2e 00 00 00 8c 00 00 00 <-- 	jne d_is_zero_end
[01D4]: 15 00 00 00 02 00 00 00 <-- 		pop cx
[01DC]: 0a 00 00 00 02 00 00 00 <-- 		push 2
[01E4]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[01EC]: 3c 00 00 00             <-- 		mul
[01F0]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[01F8]: 0a 00 00 00 ff ff ff ff <-- 		push -1
[0200]: 3c 00 00 00             <-- 		mul
[0204]: 6f 00 00 00             <-- 		fdiv  
[0208]: 0d 00 00 00 02 00 00 00 <-- 		push [cx
[0210]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[0218]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0220]: 14 00 00 00             <-- 		pop
[0224]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[022C]: 64 00 00 00             <-- 		return
[0230]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0238]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0240]: 2b 00 00 00 9b 00 00 00 <-- 	jb d_is_less_zero_end
[0248]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0250]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0258]: 14 00 00 00             <-- 		pop
[025C]: 14 00 00 00             <-- 		pop
[0260]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0268]: 64 00 00 00             <-- 		return
[026C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[0274]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[027C]: 3c 00 00 00             <-- 	mul
[0280]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0288]: 78 00 00 00             <-- 	sqrt
[028C]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[0294]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[029C]: 3c 00 00 00             <-- 	mul
[02A0]: 1e 00 00 00             <-- 	add
[02A4]: 6f 00 00 00             <-- 	fdiv 
[02A8]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[02B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[02B8]: 3c 00 00 00             <-- 	mul
[02BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[02C4]: 78 00 00 00             <-- 	sqrt
[02C8]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[02D0]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[02D8]: 3c 00 00 00             <-- 	mul
[02DC]: 50 00 00 00             <-- 	sub
[02E0]: 6f 00 00 00             <-- 	fdiv 
[02E4]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[02EC]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[02F4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[02FC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0304]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[030C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0314]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[031C]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[0324]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[032C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0334]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[033C]: 64 00 00 00             <-- 	return
[0340]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0348]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0350]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0358]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0360]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0368]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0370]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0378]: 0a 00 00 00 45 00 00 00 <-- 	push 69
[0380]: 33 00 00 00             <-- 	cout
[0384]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[038C]: 33 00 00 00             <-- 	cout
[0390]: 0a 00 00 00 74 00 00 00 <-- 	push 116
[0398]: 33 00 00 00             <-- 	cout
[039C]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[03A4]: 33 00 00 00             <-- 	cout
[03A8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[03B0]: 33 00 00 00             <-- 	cout
[03B4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03BC]: 33 00 00 00             <-- 	cout
[03C0]: 0a 00 00 00 61 00 00 00 <-- 	push 97
[03C8]: 33 00 00 00             <-- 	cout
[03CC]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03D4]: 33 00 00 00             <-- 	cout
[03D8]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03E0]: 33 00 00 00             <-- 	cout
[03E4]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[03EC]: 33 00 00 00             <-- 	cout
[03F0]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03F8]: 33 00 00 00             <-- 	cout
[03FC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0404]: 33 00 00 00             <-- 	cout
[0408]: 0a 00 00 00 63 00 00 00 <-- 	push 99
[0410]: 33 00 00 00             <-- 	cout
[0414]: 0a 00 00 00 3a 00 00 00 <-- 	push 58
[041C]: 33 00 00 00             <-- 	cout	
[0420]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0428]: 33 00 00 00             <-- 	cout
[042C]: 5b 00 00 00             <-- 	fin 
[0430]: 5b 00 00 00             <-- 	fin 
[0434]: 5b 00 00 00             <-- 	fin 
[0438]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0440]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0448]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0450]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0458]: 0c 00 00 00 00 00 00 00 <-- 	push [0]
[0460]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0468]: 0c 00 00 00 01 00 00 00 <-- 	push [1]
[0470]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0478]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0480]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0488]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0490]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[0498]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04A0]: 46 00 00 00 43 00 00 00 <-- 	call solveSquare
[04A8]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[04B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04B8]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[04C0]: 2e 00 00 00 4d 01 00 00 <-- 	jne case_1
[04C8]: 0a 00 00 00 4e 00 00 00 <-- 	push 78
[04D0]: 33 00 00 00             <-- 	cout
[04D4]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[04DC]: 33 00 00 00             <-- 	cout
[04E0]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[04E8]: 33 00 00 00             <-- 	cout
[04EC]: 0a 00 00 00 52 00 00 00 <-- 	push 82
[04F4]: 33 00 00 00             <-- 	cout
[04F8]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[0500]: 33 00 00 00             <-- 	cout
[0504]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[050C]: 33 00 00 00             <-- 	cout
[0510]: 0a 00 00 00 54 00 00 00 <-- 	push 84
[0518]: 33 00 00 00             <-- 	cout
[051C]: 0a 00 00 00 53 00 00 00 <-- 	push 83
[0524]: 33 00 00 00             <-- 	cout
[0528]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0530]: 33 00 00 00             <-- 	cout
[0534]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[053C]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0544]: 2e 00 00 00 65 01 00 00 <-- 	jne case_2
[054C]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0554]: 33 00 00 00             <-- 	cout
[0558]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0560]: 33 00 00 00             <-- 	cout
[0564]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[056C]: 33 00 00 00             <-- 	cout
[0570]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0578]: 33 00 00 00             <-- 	cout
[057C]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[0584]: 34 00 00 00             <-- 	fout
[0588]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0590]: 33 00 00 00             <-- 	cout
[0594]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[059C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[05A4]: 2e 00 00 00 95 01 00 00 <-- 	jne case_3
[05AC]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[05B4]: 33 00 00 00             <-- 	cout
[05B8]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[05C0]: 33 00 00 00             <-- 	cout
[05C4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05CC]: 33 00 00 00             <-- 	cout
[05D0]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[05D8]: 33 00 00 00             <-- 	cout
[05DC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05E4]: 33 00 00 00             <-- 	cout
[05E8]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[05F0]: 34 00 00 00             <-- 	fout
[05F4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[05FC]: 33 00 00 00             <-- 	cout
[0600]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0608]: 33 00 00 00             <-- 	cout
[060C]: 0a 00 00 00 32 00 00 00 <-- 	push 50
[0614]: 33 00 00 00             <-- 	cout
[0618]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0620]: 33 00 00 00             <-- 	cout
[0624]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[062C]: 33 00 00 00             <-- 	cout
[0630]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0638]: 33 00 00 00             <-- 	cout
[063C]: 16 00 00 00 01 00 00 00 <-- 	pop [1]
[0644]: 34 00 00 00             <-- 	fout
[0648]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0650]: 33 00 00 00             <-- 	cout
[0654]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[065C]: 0a 00 00 00 07 00 00 00 <-- 	push 7
[0664]: 2e 00 00 00 bc 01 00 00 <-- 	jne default_case
[066C]: 0a 00 00 00 41 00 00 00 <-- 	push 65
[0674]: 33 00 00 00             <-- 	cout
[0678]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[0680]: 33 00 00 00             <-- 	cout
[0684]: 0a 00 00 00 79 00 00 00 <-- 	push 121
[068C]: 33 00 00 00             <-- 	cout
[0690]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0698]: 33 00 00 00             <-- 	cout
[069C]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[06A4]: 33 00 00 00             <-- 	cout
[06A8]: 0a 00 00 00 75 00 00 00 <-- 	push 117
[06B0]: 33 00 00 00             <-- 	cout
[06B4]: 0a 00 00 00 6d 00 00 00 <-- 	push 109
[06BC]: 33 00 00 00             <-- 	cout
[06C0]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[06C8]: 33 00 00 00             <-- 	cout
[06CC]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[06D4]: 33 00 00 00             <-- 	cout
[06D8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[06E0]: 33 00 00 00             <-- 	cout
[06E4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[06EC]: 33 00 00 00             <-- 	cout
[06F0]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[06F8]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0700]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0708]: 64 00 00 00             <-- 		return		
[070C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0714]: 14 00 00 00             <-- 	pop
[0718]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0720]: 64 00 00 00             <-- 	return

Time and date: Wed Oct 30 15:12:24 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 15:12:39 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Wed Oct 30 15:12:45 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Thu Nov  7 00:50:20 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Thu Nov  7 00:51:15 2019
Assemble listing for assembled.mubeg

[0008]: 28 00 00 00 12 00 00 00 <-- jmp main
[0010]: 15 00 00 00 03 00 00 00 <-- pop dx
[0018]: 15 00 00 00 00 00 00 00 <-- pop ax
[0020]: 15 00 00 00 01 00 00 00 <-- pop bx
[0028]: 0b 00 00 00 00 00 00 00 <-- push ax
[0030]: 0d 00 00 00 01 00 00 00 <-- push [bx
[0038]: 0b 00 00 00 03 00 00 00 <-- push dx
[0040]: 64 00 00 00             <-- return
[0044]: 00 00 00 00             <-- end
[0048]: 0a 00 00 00 01 00 00 00 <-- push 1
[0050]: 14 00 00 00             <-- pop
[0054]: 0a 00 00 00 00 00 00 00 <-- push 0
[005C]: 15 00 00 00 02 00 00 00 <-- pop cx
[0064]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[006C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0074]: 2e 00 00 00 25 00 00 00 <-- 	jne if
[007C]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[0084]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[008C]: 28 00 00 00 29 00 00 00 <-- 	jmp end_if
[0094]: 0a 00 00 00 30 00 00 00 <-- 	push 48
[009C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[00A4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00AC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00B4]: 46 00 00 00 04 00 00 00 <-- 	call put
[00BC]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00C4]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00CC]: 1e 00 00 00             <-- 	add
[00D0]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[00D8]: 0a 00 00 00 54 06 00 00 <-- 	push 1620
[00E0]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[00E8]: 2b 00 00 00 19 00 00 00 <-- 	jb cycle_init
[00F0]: 0a 00 00 00 00 00 00 00 <-- push 0
[00F8]: 15 00 00 00 02 00 00 00 <-- pop cx
[0100]: 82 00 00 00             <-- 	draw
[0104]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[010C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0114]: 1e 00 00 00             <-- 	add
[0118]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0120]: 0a 00 00 00 e8 03 00 00 <-- 	push 1000
[0128]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0130]: 2b 00 00 00 40 00 00 00 <-- 	jb cycle
[0138]: 00 00 00 00             <-- end

Time and date: Thu Nov  7 00:52:19 2019
Assemble listing for assembled.mubeg

[0008]: 46 00 00 00 d0 00 00 00 <-- call main
[0010]: 00 00 00 00             <-- end
[0014]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[001C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0024]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[002C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0034]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[003C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0044]: 29 00 00 00 1b 00 00 00 <-- 	ja addr_is_neg
[004C]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0054]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[005C]: 2d 00 00 00 21 00 00 00 <-- 	je a_is_zero
[0064]: 28 00 00 00 33 00 00 00 <-- 	jmp end_a_zero
[006C]: 0a 00 00 00 06 00 00 00 <-- 		push 6
[0074]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[007C]: 28 00 00 00 40 00 00 00 <-- 		jmp return_equal
[0084]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[008C]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0094]: 2e 00 00 00 2d 00 00 00 <-- 		jne b_is_not_zero
[009C]: 0a 00 00 00 07 00 00 00 <-- 		push 7 
[00A4]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[00AC]: 28 00 00 00 33 00 00 00 <-- 		jmp end_a_zero
[00B4]: 0a 00 00 00 00 00 00 00 <-- 			push 0
[00BC]: 15 00 00 00 00 00 00 00 <-- 			pop ax
[00C4]: 28 00 00 00 40 00 00 00 <-- 			jmp return_equal
[00CC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[00D4]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[00DC]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[00E4]: 3c 00 00 00             <-- 	mul 
[00E8]: 17 00 00 00 02 00 00 00 <-- 	pop [cx
[00F0]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[00F8]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0100]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0108]: 64 00 00 00             <-- 	return
[010C]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0114]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[011C]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0124]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[012C]: 0a 00 00 00 00 00 00 00 <-- 	push 0 
[0134]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[013C]: 2e 00 00 00 5f 00 00 00 <-- 	jne solveLinear_end
[0144]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[014C]: 14 00 00 00             <-- 		pop
[0150]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0158]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[0160]: 0b 00 00 00 02 00 00 00 <-- 		push cx
[0168]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[0170]: 46 00 00 00 05 00 00 00 <-- 		call solveLinear
[0178]: 64 00 00 00             <-- 		return 
[017C]: 0a 00 00 00 04 00 00 00 <-- 	push 4
[0184]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[018C]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0194]: 3d 00 00 00             <-- 	fmul
[0198]: 3c 00 00 00             <-- 	mul
[019C]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01A4]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[01AC]: 3d 00 00 00             <-- 	fmul
[01B0]: 50 00 00 00             <-- 	sub
[01B4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[01BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[01C4]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[01CC]: 2e 00 00 00 8c 00 00 00 <-- 	jne d_is_zero_end
[01D4]: 15 00 00 00 02 00 00 00 <-- 		pop cx
[01DC]: 0a 00 00 00 02 00 00 00 <-- 		push 2
[01E4]: 0b 00 00 00 00 00 00 00 <-- 		push ax
[01EC]: 3c 00 00 00             <-- 		mul
[01F0]: 0b 00 00 00 01 00 00 00 <-- 		push bx
[01F8]: 0a 00 00 00 ff ff ff ff <-- 		push -1
[0200]: 3c 00 00 00             <-- 		mul
[0204]: 6f 00 00 00             <-- 		fdiv  
[0208]: 0d 00 00 00 02 00 00 00 <-- 		push [cx
[0210]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[0218]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0220]: 14 00 00 00             <-- 		pop
[0224]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[022C]: 64 00 00 00             <-- 		return
[0230]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0238]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0240]: 2b 00 00 00 9b 00 00 00 <-- 	jb d_is_less_zero_end
[0248]: 0a 00 00 00 00 00 00 00 <-- 		push 0
[0250]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0258]: 14 00 00 00             <-- 		pop
[025C]: 14 00 00 00             <-- 		pop
[0260]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0268]: 64 00 00 00             <-- 		return
[026C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[0274]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[027C]: 3c 00 00 00             <-- 	mul
[0280]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0288]: 78 00 00 00             <-- 	sqrt
[028C]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[0294]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[029C]: 3c 00 00 00             <-- 	mul
[02A0]: 1e 00 00 00             <-- 	add
[02A4]: 6f 00 00 00             <-- 	fdiv 
[02A8]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[02B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[02B8]: 3c 00 00 00             <-- 	mul
[02BC]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[02C4]: 78 00 00 00             <-- 	sqrt
[02C8]: 0a 00 00 00 ff ff ff ff <-- 	push -1
[02D0]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[02D8]: 3c 00 00 00             <-- 	mul
[02DC]: 50 00 00 00             <-- 	sub
[02E0]: 6f 00 00 00             <-- 	fdiv 
[02E4]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[02EC]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[02F4]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[02FC]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[0304]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[030C]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0314]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[031C]: 0d 00 00 00 02 00 00 00 <-- 	push [cx
[0324]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[032C]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0334]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[033C]: 64 00 00 00             <-- 	return
[0340]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[0348]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0350]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0358]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0360]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0368]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0370]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0378]: 0a 00 00 00 45 00 00 00 <-- 	push 69
[0380]: 33 00 00 00             <-- 	cout
[0384]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[038C]: 33 00 00 00             <-- 	cout
[0390]: 0a 00 00 00 74 00 00 00 <-- 	push 116
[0398]: 33 00 00 00             <-- 	cout
[039C]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[03A4]: 33 00 00 00             <-- 	cout
[03A8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[03B0]: 33 00 00 00             <-- 	cout
[03B4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03BC]: 33 00 00 00             <-- 	cout
[03C0]: 0a 00 00 00 61 00 00 00 <-- 	push 97
[03C8]: 33 00 00 00             <-- 	cout
[03CC]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03D4]: 33 00 00 00             <-- 	cout
[03D8]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[03E0]: 33 00 00 00             <-- 	cout
[03E4]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[03EC]: 33 00 00 00             <-- 	cout
[03F0]: 0a 00 00 00 2c 00 00 00 <-- 	push 44
[03F8]: 33 00 00 00             <-- 	cout
[03FC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0404]: 33 00 00 00             <-- 	cout
[0408]: 0a 00 00 00 63 00 00 00 <-- 	push 99
[0410]: 33 00 00 00             <-- 	cout
[0414]: 0a 00 00 00 3a 00 00 00 <-- 	push 58
[041C]: 33 00 00 00             <-- 	cout	
[0420]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0428]: 33 00 00 00             <-- 	cout
[042C]: 5b 00 00 00             <-- 	fin 
[0430]: 5b 00 00 00             <-- 	fin 
[0434]: 5b 00 00 00             <-- 	fin 
[0438]: 15 00 00 00 02 00 00 00 <-- 	pop cx
[0440]: 15 00 00 00 01 00 00 00 <-- 	pop bx
[0448]: 15 00 00 00 00 00 00 00 <-- 	pop ax
[0450]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0458]: 0c 00 00 00 00 00 00 00 <-- 	push [0]
[0460]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0468]: 0c 00 00 00 01 00 00 00 <-- 	push [1]
[0470]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0478]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0480]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0488]: 0b 00 00 00 02 00 00 00 <-- 	push cx
[0490]: 0b 00 00 00 01 00 00 00 <-- 	push bx
[0498]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04A0]: 46 00 00 00 43 00 00 00 <-- 	call solveSquare
[04A8]: 15 00 00 00 03 00 00 00 <-- 	pop dx
[04B0]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[04B8]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[04C0]: 2e 00 00 00 4d 01 00 00 <-- 	jne case_1
[04C8]: 0a 00 00 00 4e 00 00 00 <-- 	push 78
[04D0]: 33 00 00 00             <-- 	cout
[04D4]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[04DC]: 33 00 00 00             <-- 	cout
[04E0]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[04E8]: 33 00 00 00             <-- 	cout
[04EC]: 0a 00 00 00 52 00 00 00 <-- 	push 82
[04F4]: 33 00 00 00             <-- 	cout
[04F8]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[0500]: 33 00 00 00             <-- 	cout
[0504]: 0a 00 00 00 4f 00 00 00 <-- 	push 79
[050C]: 33 00 00 00             <-- 	cout
[0510]: 0a 00 00 00 54 00 00 00 <-- 	push 84
[0518]: 33 00 00 00             <-- 	cout
[051C]: 0a 00 00 00 53 00 00 00 <-- 	push 83
[0524]: 33 00 00 00             <-- 	cout
[0528]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0530]: 33 00 00 00             <-- 	cout
[0534]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[053C]: 0a 00 00 00 01 00 00 00 <-- 	push 1
[0544]: 2e 00 00 00 65 01 00 00 <-- 	jne case_2
[054C]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0554]: 33 00 00 00             <-- 	cout
[0558]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0560]: 33 00 00 00             <-- 	cout
[0564]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[056C]: 33 00 00 00             <-- 	cout
[0570]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0578]: 33 00 00 00             <-- 	cout
[057C]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[0584]: 34 00 00 00             <-- 	fout
[0588]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0590]: 33 00 00 00             <-- 	cout
[0594]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[059C]: 0a 00 00 00 02 00 00 00 <-- 	push 2
[05A4]: 2e 00 00 00 95 01 00 00 <-- 	jne case_3
[05AC]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[05B4]: 33 00 00 00             <-- 	cout
[05B8]: 0a 00 00 00 31 00 00 00 <-- 	push 49
[05C0]: 33 00 00 00             <-- 	cout
[05C4]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05CC]: 33 00 00 00             <-- 	cout
[05D0]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[05D8]: 33 00 00 00             <-- 	cout
[05DC]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[05E4]: 33 00 00 00             <-- 	cout
[05E8]: 16 00 00 00 00 00 00 00 <-- 	pop [0]
[05F0]: 34 00 00 00             <-- 	fout
[05F4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[05FC]: 33 00 00 00             <-- 	cout
[0600]: 0a 00 00 00 78 00 00 00 <-- 	push 120
[0608]: 33 00 00 00             <-- 	cout
[060C]: 0a 00 00 00 32 00 00 00 <-- 	push 50
[0614]: 33 00 00 00             <-- 	cout
[0618]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0620]: 33 00 00 00             <-- 	cout
[0624]: 0a 00 00 00 3d 00 00 00 <-- 	push 61
[062C]: 33 00 00 00             <-- 	cout
[0630]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0638]: 33 00 00 00             <-- 	cout
[063C]: 16 00 00 00 01 00 00 00 <-- 	pop [1]
[0644]: 34 00 00 00             <-- 	fout
[0648]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[0650]: 33 00 00 00             <-- 	cout
[0654]: 0b 00 00 00 00 00 00 00 <-- 	push ax
[065C]: 0a 00 00 00 07 00 00 00 <-- 	push 7
[0664]: 2e 00 00 00 bc 01 00 00 <-- 	jne default_case
[066C]: 0a 00 00 00 41 00 00 00 <-- 	push 65
[0674]: 33 00 00 00             <-- 	cout
[0678]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[0680]: 33 00 00 00             <-- 	cout
[0684]: 0a 00 00 00 79 00 00 00 <-- 	push 121
[068C]: 33 00 00 00             <-- 	cout
[0690]: 0a 00 00 00 20 00 00 00 <-- 	push 32
[0698]: 33 00 00 00             <-- 	cout
[069C]: 0a 00 00 00 6e 00 00 00 <-- 	push 110
[06A4]: 33 00 00 00             <-- 	cout
[06A8]: 0a 00 00 00 75 00 00 00 <-- 	push 117
[06B0]: 33 00 00 00             <-- 	cout
[06B4]: 0a 00 00 00 6d 00 00 00 <-- 	push 109
[06BC]: 33 00 00 00             <-- 	cout
[06C0]: 0a 00 00 00 62 00 00 00 <-- 	push 98
[06C8]: 33 00 00 00             <-- 	cout
[06CC]: 0a 00 00 00 65 00 00 00 <-- 	push 101
[06D4]: 33 00 00 00             <-- 	cout
[06D8]: 0a 00 00 00 72 00 00 00 <-- 	push 114
[06E0]: 33 00 00 00             <-- 	cout
[06E4]: 0a 00 00 00 0a 00 00 00 <-- 	push 10
[06EC]: 33 00 00 00             <-- 	cout
[06F0]: 0a 00 00 00 01 00 00 00 <-- 		push 1
[06F8]: 15 00 00 00 00 00 00 00 <-- 		pop ax
[0700]: 0b 00 00 00 03 00 00 00 <-- 		push dx
[0708]: 64 00 00 00             <-- 		return		
[070C]: 0a 00 00 00 00 00 00 00 <-- 	push 0
[0714]: 14 00 00 00             <-- 	pop
[0718]: 0b 00 00 00 03 00 00 00 <-- 	push dx
[0720]: 64 00 00 00             <-- 	return
